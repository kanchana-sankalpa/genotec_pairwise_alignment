/**
 *  Local Alignment with Modified Algorithm
 *  @Genotec
 */

package alignment_test;

import java.io.File;

public class Main1 {

    /**
     * @param args the command line arguments
     */
    static double d = System.currentTimeMillis();
    static int count = 4;
    static int perCore = 1;

    public static void main(String[] args) throws Exception {
        int me = 0;
        try {
            System.out.println(me);

          // Dummy patient sequence taken from BRACA Gene (1)
    	String dummyPatientBRACASeq1 = "TCATACATTTTTCTCTAACTGCAAACATAATGTTTTCCCTTGTATTTTACAGATGCAAAG"
    			+ "AGCTATAATTTTGCAAAAAAGGAAAATAACTCTCCTGAACATCTAAAAGATGAAGTTTCTAA"
    			+ "CATCCAAAGTATGGGCTACAGAAACCGTGCCAAAAGACTTCTACAGAGTGAACCCGAAAATC"
    			+ "CTTCCTTGGTAAAACCATTTGTTTTCTTCTTCTTCTTCTTCTTCTTTTCTTTTTTTTTTCTT"
    			+ "TTTTTTTTTTGAGATGGAGTCTTGCTCTGTGGCCCAGGCTAGAAGCAGTCCTCCTGCCTTAG"
    			+ "CCCCCTTAGTAGCTGGGATTACAGGCACGCGCCACCATGCCAGGCTAATTTTTGTATTTTTA"
    			+ "GTAGAGACGGGGTTTCATCATGTTGGCCAGGCTGGTCTCGAACTCCTAACCTCAGGTGATCC"
    			+ "ACCCACCTCGGCTCCCCAAATTGCTGGGATTACAGGTGTGAGCCACTGTGCCCGGCCGGTAA"
    			+ "AACCATTTTCATTTATTCTGGCAACATCTCTTTATTGAGCATTGTGAATATGTTAGTGAATG"
    			+ "TGCTAGATGCTCATAGATTTATATAAAAAGTTAGTGAAGAAGGAAAGATGGTATATTAAGTG"
    			+ "GTTAGACAAGTGTTCTAATCAGTTAGAGTTCAGAGAAGGTCAGGGTACCTGATATAATCAAG"
    			+ "AGAGAGACCTTACAGCCAGGTGAGGTGAATGTACCTATAATCCCAGCTACTTAGGAGGCT";
    	
            // Dummy patient sequence taken from Dystrophin Gene (1)
    	/*String dummyPatientDROPSeq1 = "TGATATTGAAATTGTATTTAAGTTTAATACATTTAAATTTAAAGTTACATTTTGATAAATTGCTTTGTTT"
    			+"TTCTTTTTTCTTTCTTTCTTTCTTCTTCTTTTTTTTTTTGTTTTGTTTTTTTTGAAACAACAATCTCACT"
+"ATGTTGCCTCCCAGGCTGGTATCCAACTCCTGGGCTCAAGCAGTCCTCCTTCCTCGGCCTCCCAAAGTGC"
+"TAGGATTATAGGCAGGCACCACCATCCCCAGCTAAATTGCTTCTTAAATGAAACTTCTGAATTTGAGGAT"
+"ACGTGATTATGTGGAGTAGTTTTCCCTTTCTTTCCCCCCCTGAAATCCATATTCTGAAGTACAGTGATTT"
+"ATATAAAAGTAAAAAGAAGGAGACTGTTTTTTTTTTTTAAATTCTATTAAGAAACCAAATTTTAACAGAC";*/
    	
    	 // Dummy patient sequence taken from BRACA Gene (2)
    	String dummyPatientBRACASeq2 = "TCATACATTTTTCTCTAACTGCAAACATAATGTTTTCCCTTGTATTTTACAGATGCAAAC"
    		+ "AGCTATAATTTTGCAAAAAAGGAAAATAACTCTCCTGAACATCTAAAAGATGAAGTTTCTAT"
    		+ "CATCCAAAGTATGGGCTACAGAAACCGTGCCAAAAGACTTCTACAGAGTGAACCCGAAAATC"
    		+ "CTTCCTTGGTAAAACCATTTGTTTTCTTCTTCTTCTTCTTCTTCTTTTCTTTTTTTTTTCTT"
    		+ "TTTTTTTTTTGAGATGGAGTCTTGCTCTGTGGCCCAGGCTAGAAGCAGTCCTCCTGCCTTAG"
    		+ "CCCCCTTAGTAGCTGGGATTACAGGCACGCGCCACCATGCCAGGCTAATTTTTGTATTTTTA"
    		+ "GTAGAGACGGGGTTTCATCATGTTGGCCAGGCTGGTCTCGAACTCCTAACCTCAGGTGATCC"
    		+ "ACCCACCTCGGCTCCCCAAATTGCTGGGATTACAGGTGTGAGCCACTGTGCCCGGCCGGTAA"
    		+ "AACCATTTTCATTTATTCTGGCAACATCTCTTTATTGAGCATTGTGAATATGTTAGTGAATG"
    		+ "TGCTAGATGCTCATAGATTTATATAAAAAGTTAGTGAAGAAGGAAAGATGGTATATTAAGTG"
    		+ "GTTAGACAAGTGTTCTAATCAGTTAGAGTTCAGAGAAGGTCAGGGTACCTGATATAATCAAG"
    		+ "AGAGAGACCTTACAGCCAGGTGAGGTGAATGTACCTATAATCCCAGCTACTTAGGAGGCT";
         
    	// Dummy patient sequence taken from Dystrophin Gene (1)
	/*String dummyPatientDROPSeq1 = "TGATATTGAAATTGTATTTAAGTTTAATACATTTAAATTTAAAGTTACATTTTGATAAATTGCTTTGTTT"
			+"TTCTTTTTTCTTTCTTTCTTTCTTCTTCTTTTTTTTTTTGTTTTGTTTTTTTTGAAACAACAATCTCACT"
+"ATGTTGCCTCCCAGGCTGGTATCCAACTCCTGGGCTCAAGCAGTCCTCCTTCCTCGGCCTCCCAAAGTGC"
+"TAGGATTATAGGCAGGCACCACCATCCCCAGCTAAATTGCTTCTTAAATGAAACTTCTGAATTTGAGGAT"
+"ACGTGATTATGTGGAGTAGTTTTCCCTTTCTTTCCCCCCCTGAAATCCATATTCTGAAGTACAGTGATTT"
+"AGATAAAAGTAAAAAGAAGGAGACTGTTTTTTTTTTTTAAATTCTATTAAGAAACCAAATTTTAACAGAC";*/
    	            
    	// Path of the Refernace file BRCA
    	String referanceFilePath = "<Path of File>/BRCA1_REF.txt";
	 GT_LocalAlignmentManager alignmentManager = new GT_LocalAlignmentManager(
			 dummyPatientBRACASeq1,dummyPatientBRACASeq2,referanceFilePath);
             
     System.out.println("% done...______________");

        } catch (Exception ex) {
        }
        System.out.println("Core No:" + me + " done____________________");
        System.out.println(System.currentTimeMillis() - d);
    }
    private static final long MEGABYTE = 1024L * 1024L;

    public static long bytesToMegabytes(long bytes) {
        return bytes / MEGABYTE;
    }
}
